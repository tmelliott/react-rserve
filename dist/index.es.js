import e,{useEffect as n}from"react";const t=e.createContext(null);let c=null;const l=({value:l,children:o})=>{const[r,a]=e.useState(null),[s,u]=e.useState(!1),i=require("./lib-rserve");e.useEffect((()=>{if(l.host&&(!r||!r.running))try{let e;const n={...l,on_connect:()=>{u(!1),console.log("connected"),a(e)},on_close:()=>{a(null),console.log("disconnected, retrying connection ..."),u(!0),e=i.create({...n})}};u(!0),e=i.create({...n})}catch(e){a(null),console.log(e)}}),[l,r]);return n((()=>(null!==c&&clearInterval(c),c=setInterval((()=>{r&&r.running&&r.ocap(((e,n)=>n.heartbeat?n.heartbeat(((e,n)=>0)):0))}),[2e4]),()=>clearInterval(c))),[r]),e.createElement(t.Provider,{value:{R:r,connecting:s}},o)};function o(){return e.useContext(t)}const r=({host:n,children:t})=>e.createElement(l,{value:{host:n}},t);export{r as Rserve,o as useRserve};
