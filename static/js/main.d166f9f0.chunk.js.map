{"version":3,"sources":["../../lib/rserve-js.js","../../src/index.tsx","App.tsx","index.tsx"],"names":["Rserve","_","require","make_basic","type","proto","json","this","wrapped_proto","resolver","result","call","r_type","isUndefined","attributes","r_attributes","object","map","value","v","name","attrs","r_object","prototype","Robj","null","clos","formals","body","vector","values","x","keys","each","key","i","symbol","list","lang","tagged_list","slice","all","elt","classify_list","tagged_lang","vector_exp","int_array","levels","arr","factor","length","double_array","string_array","indexOf","bool_array","raw","string","Rsrv","PAR_TYPE","PAR_LEN","PAR_LENGTH","par_parse","SET_PAR","ty","len","CMD_STAT","SET_STAT","s","IS_OOB_SEND","OOB_SEND","IS_OOB_MSG","OOB_MSG","OOB_USR_CODE","CMD_RESP","RESP_OK","RESP_ERR","ERR_auth_failed","ERR_conn_broken","ERR_inv_cmd","ERR_inv_par","ERR_Rerror","ERR_IOerror","ERR_notOpen","ERR_accessDenied","ERR_unsupportedCmd","ERR_unknownCmd","ERR_data_overflow","ERR_object_too_big","ERR_out_of_mem","ERR_ctrl_closed","ERR_session_busy","ERR_detach_failed","ERR_disabled","ERR_unavailable","ERR_cryptError","ERR_securityClose","CMD_login","CMD_voidEval","CMD_eval","CMD_shutdown","CMD_switch","CMD_keyReq","CMD_secLogin","CMD_OCcall","CMD_openFile","CMD_createFile","CMD_closeFile","CMD_readFile","CMD_writeFile","CMD_removeFile","CMD_setSEXP","CMD_assignSEXP","CMD_detachSession","CMD_detachedVoidEval","CMD_attachSession","CMD_ctrl","CMD_ctrlEval","CMD_ctrlSource","CMD_ctrlShutdown","CMD_setBufferSize","CMD_setEncoding","CMD_SPECIAL_MASK","CMD_serEval","CMD_serAssign","CMD_serEEval","DT_INT","DT_CHAR","DT_DOUBLE","DT_STRING","DT_BYTESTREAM","DT_SEXP","DT_ARRAY","DT_LARGE","XT_NULL","XT_INT","XT_DOUBLE","XT_STR","XT_LANG","XT_SYM","XT_BOOL","XT_S4","XT_VECTOR","XT_LIST","XT_CLOS","XT_SYMNAME","XT_LIST_NOTAG","XT_LIST_TAG","XT_LANG_NOTAG","XT_LANG_TAG","XT_VECTOR_EXP","XT_VECTOR_STR","XT_ARRAY_INT","XT_ARRAY_DOUBLE","XT_ARRAY_STR","XT_ARRAY_BOOL_UA","XT_ARRAY_BOOL","XT_RAW","XT_ARRAY_CPLX","XT_UNKNOWN","XT_LARGE","XT_HAS_ATTR","BOOL_TRUE","BOOL_FALSE","BOOL_NA","GET_XT","GET_DT","HAS_ATTR","IS_LARGE","status_codes","read","m","handlers","lift","f","amount","that","bind","t","t2","decodeRString","charCodeAt","decodeURIComponent","escape","xep","Error","offset","data_view","make","EndianAwareDataView","msg","read_int","old_offset","getInt32","read_string","c","getInt8","String","fromCharCode","read_stream","view","read_int_vector","Int32Array","read_double_vector","Float64Array","read_null","a","l","read_unknown","read_string_array","Uint8Array","current_str","push","read_bool_array","l2","subarray","read_raw","buffer","read_sexp","d","total_read","undefined","Math","pow","attr_result","RserveError","read_symbol_value_pairs","lst","tag","xf","g","sl","read_clos","read_list","old_length","read_list_tag","read_lang_tag","read_vector","read_list_no_tag","read_lang_no_tag","read_vector_exp","read_symname","read_int_array","read_double_array","incomplete_","incomplete_header_","msg_bytes_","remaining_","clear_incomplete","parse_payload","payload","my_ArrayBufferView","byteLength","reader","sexp","parse_websocket_frame","header","ok","message","incomplete","complete_msg","ArrayBuffer","array","forEach","frame","set","resp","status_code","length_high","msg_id","full_msg_length","e","_is_little_endian","bytes","words","Uint32Array","setInt8","setUint8","getUint8","setters","getters","byteOffset","my_dataView","DataView","b","o","ctor","new_offset","new_length","element_size","BYTES_PER_ELEMENT","n_els","output_buffer","out_view","skip","ofs","_encode_command","command","isArray","reduce","memo","val","big_buffer","setInt32","source_array","_encode_string","str","strl","create","opts","host","defaults","on_connect","onconnect","socket","WebSocket","binaryType","handle_error","on_error","error","received_handshake","captured_functions","convert_to_hash","hash","k","random","fresh_hash","_encode_value","forced_type","sz","determine_size","write_into_view","_send_cmd_now","debug","message_out","send","onclose","running","closed","on_close","onmessage","data","constructor","message_in","cmd","queue","find","queues","result_callback","on_data","p","compute_queue","ctrl_queue","wrap_all_ocaps","isString","on_oob_message","in_oob_message","bump_queues","isFunction","ocap_mode","captured_function","params","err","apply","RESP_ERROR","on_raw_string","substr","login","bare_ocap","ocap","wrap_ocap","hand_shake","awaiting_result","queue_can_send","available","filter","sortBy","timestamp","shift","callback","_cmd","Date","now","enqueue","close","eval","createFile","writeFile","chunk","payload_length","_encode_bytes","closeFile","OCcall","is_ocap","resolve_hash","replace","obj","isTypedArray","isObject","wrapped_ocap","toArray","arguments","pop","Object","mixin","type_id","isNull","type_dispatch","boolean","number","el","RServeError","list_size","final_size","payload_size","isBoolean","unescape","encodeURIComponent","isNumber","names_size_1","names_size","array_buffer_view","convert","current_offset","lbl","read_view","size","is_large","payload_start","write_view","utf8","setFloat64","setUint32","converted_function","module","exports","rs","RC","React","OCCall","RserveProvider","children","r","args","setR","App","R","useState","RV","setRV","console","log","funs","rversion","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d166f9f0.chunk.js","sourcesContent":["const Rserve = (function () {\n  var Rserve = {}\n\n  var _ = require('underscore')\n\n  ;(function () {\n    function make_basic(type, proto) {\n      proto = proto || {\n        json: function () {\n          throw 'json() unsupported for type ' + this.type\n        }\n      }\n      var wrapped_proto = {\n        json: function (resolver) {\n          var result = proto.json.call(this, resolver)\n          result.r_type = type\n          if (!_.isUndefined(this.attributes))\n            result.r_attributes = _.object(\n              _.map(this.attributes.value, function (v) {\n                return [v.name, v.value.json(resolver)]\n              })\n            )\n          return result\n        }\n      }\n      return function (v, attrs) {\n        function r_object() {\n          this.type = type\n          this.value = v\n          this.attributes = attrs\n        }\n        r_object.prototype = wrapped_proto\n        var result = new r_object()\n        return result\n      }\n    }\n\n    Rserve.Robj = {\n      null: function (attributes) {\n        return {\n          type: 'null',\n          value: null,\n          attributes: attributes,\n          json: function () {\n            return null\n          }\n        }\n      },\n\n      clos: function (formals, body, attributes) {\n        return {\n          type: 'clos',\n          value: { formals: formals, body: body },\n          attributes: attributes,\n          json: function () {\n            throw 'json() unsupported for type clos'\n          }\n        }\n      },\n\n      vector: make_basic('vector', {\n        json: function (resolver) {\n          var values = _.map(this.value, function (x) {\n            return x.json(resolver)\n          })\n          if (_.isUndefined(this.attributes)) {\n            return values\n          } else {\n            // FIXME: there is no reason why names should be the first or only\n            //        attribute, so the code should really look\n            //        for \"names\" and not cry if it doesn't exist\n            if (this.attributes.value[0].name == 'names') {\n              var keys = this.attributes.value[0].value.value\n              var result = {}\n              _.each(keys, function (key, i) {\n                result[key] = values[i]\n              })\n              return result\n            }\n            // FIXME: how can we pass other important attributes\n            //        like \"class\" ?\n            return values\n          }\n        }\n      }),\n      symbol: make_basic('symbol', {\n        json: function () {\n          return this.value\n        }\n      }),\n      list: make_basic('list'),\n      lang: make_basic('lang', {\n        json: function (resolver) {\n          var values = _.map(this.value, function (x) {\n            return x.json(resolver)\n          })\n          if (_.isUndefined(this.attributes)) {\n            return values\n          } else {\n            // FIXME: lang doens't have \"names\" attribute since\n            //        names are sent as tags (langs are pairlists)\n            //        so this seems superfluous (it is dangerous\n            //        if lang ever had attributes since there is\n            //        no reason to fail in that case)\n            if (this.attributes.value[0].name != 'names')\n              throw 'expected names here'\n            var keys = this.attributes.value[0].value.value\n            var result = {}\n            _.each(keys, function (key, i) {\n              result[key] = values[i]\n            })\n            return result\n          }\n        }\n      }),\n      tagged_list: make_basic('tagged_list', {\n        json: function (resolver) {\n          function classify_list(list) {\n            if (\n              _.all(list, function (elt) {\n                return elt.name === null\n              })\n            ) {\n              return 'plain_list'\n            } else if (\n              _.all(list, function (elt) {\n                return elt.name !== null\n              })\n            ) {\n              return 'plain_object'\n            } else return 'mixed_list'\n          }\n          var list = this.value.slice(1)\n          switch (classify_list(list)) {\n            case 'plain_list':\n              return _.map(list, function (elt) {\n                return elt.value.json(resolver)\n              })\n            case 'plain_object':\n              return _.object(\n                _.map(list, function (elt) {\n                  return [elt.name, elt.value.json(resolver)]\n                })\n              )\n            case 'mixed_list':\n              return list\n            default:\n              throw 'Internal Error'\n          }\n        }\n      }),\n      tagged_lang: make_basic('tagged_lang', {\n        json: function (resolver) {\n          var pair_vec = _.map(this.value, function (elt) {\n            return [elt.name, elt.value.json(resolver)]\n          })\n          return pair_vec\n        }\n      }),\n      vector_exp: make_basic('vector_exp'),\n      int_array: make_basic('int_array', {\n        json: function () {\n          if (\n            this.attributes &&\n            this.attributes.type === 'tagged_list' &&\n            this.attributes.value[0].name === 'levels' &&\n            this.attributes.value[0].value.type === 'string_array'\n          ) {\n            var levels = this.attributes.value[0].value.value\n            var arr = _.map(this.value, function (factor) {\n              return levels[factor - 1]\n            })\n            arr.levels = levels\n            return arr\n          } else {\n            if (this.value.length === 1) return this.value[0]\n            else return this.value\n          }\n        }\n      }),\n      double_array: make_basic('double_array', {\n        json: function () {\n          if (this.value.length === 1 && _.isUndefined(this.attributes))\n            return this.value[0]\n          else return this.value\n        }\n      }),\n      string_array: make_basic('string_array', {\n        json: function (resolver) {\n          if (this.value.length === 1) {\n            if (_.isUndefined(this.attributes)) return this.value[0]\n            if (\n              this.attributes.value[0].name === 'class' &&\n              this.attributes.value[0].value.value.indexOf(\n                'javascript_function'\n              ) !== -1\n            )\n              return resolver(this.value[0])\n            return this.value\n          } else return this.value\n        }\n      }),\n      bool_array: make_basic('bool_array', {\n        json: function () {\n          if (this.value.length === 1 && _.isUndefined(this.attributes))\n            return this.value[0]\n          else return this.value\n        }\n      }),\n      raw: make_basic('raw', {\n        json: function () {\n          if (this.value.length === 1 && _.isUndefined(this.attributes))\n            return this.value[0]\n          else return this.value\n        }\n      }),\n      string: make_basic('string', {\n        json: function () {\n          return this.value\n        }\n      })\n    }\n  })()\n  // Simple constants and functions are defined here,\n  // in correspondence with Rserve's Rsrv.h\n\n  Rserve.Rsrv = {\n    PAR_TYPE: function (x) {\n      return x & 255\n    },\n    PAR_LEN: function (x) {\n      return x >>> 8\n    },\n    PAR_LENGTH: function (x) {\n      return x >>> 8\n    },\n    par_parse: function (x) {\n      return [Rserve.Rsrv.PAR_TYPE(x), Rserve.Rsrv.PAR_LEN(x)]\n    },\n    SET_PAR: function (ty, len) {\n      return ((len & 0xffffff) << 8) | (ty & 255)\n    },\n    CMD_STAT: function (x) {\n      return (x >>> 24) & 127\n    },\n    SET_STAT: function (x, s) {\n      return x | ((s & 127) << 24)\n    },\n\n    IS_OOB_SEND: function (x) {\n      return (x & 0xffff000) === Rserve.Rsrv.OOB_SEND\n    },\n    IS_OOB_MSG: function (x) {\n      return (x & 0xffff000) === Rserve.Rsrv.OOB_MSG\n    },\n    OOB_USR_CODE: function (x) {\n      return x & 0xfff\n    },\n\n    CMD_RESP: 0x10000,\n    RESP_OK: 0x10000 | 0x0001,\n    RESP_ERR: 0x10000 | 0x0002,\n    OOB_SEND: 0x20000 | 0x1000,\n    OOB_MSG: 0x20000 | 0x2000,\n    ERR_auth_failed: 0x41,\n    ERR_conn_broken: 0x42,\n    ERR_inv_cmd: 0x43,\n    ERR_inv_par: 0x44,\n    ERR_Rerror: 0x45,\n    ERR_IOerror: 0x46,\n    ERR_notOpen: 0x47,\n    ERR_accessDenied: 0x48,\n    ERR_unsupportedCmd: 0x49,\n    ERR_unknownCmd: 0x4a,\n    ERR_data_overflow: 0x4b,\n    ERR_object_too_big: 0x4c,\n    ERR_out_of_mem: 0x4d,\n    ERR_ctrl_closed: 0x4e,\n    ERR_session_busy: 0x50,\n    ERR_detach_failed: 0x51,\n    ERR_disabled: 0x61,\n    ERR_unavailable: 0x62,\n    ERR_cryptError: 0x63,\n    ERR_securityClose: 0x64,\n\n    CMD_login: 0x001,\n    CMD_voidEval: 0x002,\n    CMD_eval: 0x003,\n    CMD_shutdown: 0x004,\n    CMD_switch: 0x005,\n    CMD_keyReq: 0x006,\n    CMD_secLogin: 0x007,\n    CMD_OCcall: 0x00f,\n    CMD_openFile: 0x010,\n    CMD_createFile: 0x011,\n    CMD_closeFile: 0x012,\n    CMD_readFile: 0x013,\n    CMD_writeFile: 0x014,\n    CMD_removeFile: 0x015,\n    CMD_setSEXP: 0x020,\n    CMD_assignSEXP: 0x021,\n    CMD_detachSession: 0x030,\n    CMD_detachedVoidEval: 0x031,\n    CMD_attachSession: 0x032,\n    CMD_ctrl: 0x40,\n    CMD_ctrlEval: 0x42,\n    CMD_ctrlSource: 0x45,\n    CMD_ctrlShutdown: 0x44,\n    CMD_setBufferSize: 0x081,\n    CMD_setEncoding: 0x082,\n    CMD_SPECIAL_MASK: 0xf0,\n    CMD_serEval: 0xf5,\n    CMD_serAssign: 0xf6,\n    CMD_serEEval: 0xf7,\n\n    DT_INT: 1,\n    DT_CHAR: 2,\n    DT_DOUBLE: 3,\n    DT_STRING: 4,\n    DT_BYTESTREAM: 5,\n    DT_SEXP: 10,\n    DT_ARRAY: 11,\n    DT_LARGE: 64,\n\n    XT_NULL: 0,\n    XT_INT: 1,\n    XT_DOUBLE: 2,\n    XT_STR: 3,\n    XT_LANG: 4,\n    XT_SYM: 5,\n    XT_BOOL: 6,\n    XT_S4: 7,\n    XT_VECTOR: 16,\n    XT_LIST: 17,\n    XT_CLOS: 18,\n    XT_SYMNAME: 19,\n    XT_LIST_NOTAG: 20,\n    XT_LIST_TAG: 21,\n    XT_LANG_NOTAG: 22,\n    XT_LANG_TAG: 23,\n    XT_VECTOR_EXP: 26,\n    XT_VECTOR_STR: 27,\n    XT_ARRAY_INT: 32,\n    XT_ARRAY_DOUBLE: 33,\n    XT_ARRAY_STR: 34,\n    XT_ARRAY_BOOL_UA: 35,\n    XT_ARRAY_BOOL: 36,\n    XT_RAW: 37,\n    XT_ARRAY_CPLX: 38,\n    XT_UNKNOWN: 48,\n    XT_LARGE: 64,\n    XT_HAS_ATTR: 128,\n\n    BOOL_TRUE: 1,\n    BOOL_FALSE: 0,\n    BOOL_NA: 2,\n\n    GET_XT: function (x) {\n      return x & 63\n    },\n    GET_DT: function (x) {\n      return x & 63\n    },\n    HAS_ATTR: function (x) {\n      return (x & Rserve.Rsrv.XT_HAS_ATTR) > 0\n    },\n    IS_LARGE: function (x) {\n      return (x & Rserve.Rsrv.XT_LARGE) > 0\n    },\n\n    // # FIXME A WHOLE LOT OF MACROS HERE WHICH ARE PROBABLY IMPORTANT\n    // ##############################################################################\n\n    status_codes: {\n      0x41: 'ERR_auth_failed',\n      0x42: 'ERR_conn_broken',\n      0x43: 'ERR_inv_cmd',\n      0x44: 'ERR_inv_par',\n      0x45: 'ERR_Rerror',\n      0x46: 'ERR_IOerror',\n      0x47: 'ERR_notOpen',\n      0x48: 'ERR_accessDenied',\n      0x49: 'ERR_unsupportedCmd',\n      0x4a: 'ERR_unknownCmd',\n      0x4b: 'ERR_data_overflow',\n      0x4c: 'ERR_object_too_big',\n      0x4d: 'ERR_out_of_mem',\n      0x4e: 'ERR_ctrl_closed',\n      0x50: 'ERR_session_busy',\n      0x51: 'ERR_detach_failed',\n      0x61: 'ERR_disabled',\n      0x62: 'ERR_unavailable',\n      0x63: 'ERR_cryptError',\n      0x64: 'ERR_securityClose'\n    }\n  }\n  ;(function () {\n    function read(m) {\n      var handlers = {}\n\n      function lift(f, amount) {\n        return function (attributes, length) {\n          return [f.call(that, attributes, length), amount || length]\n        }\n      }\n\n      function bind(m, f) {\n        return function (attributes, length) {\n          var t = m.call(that, attributes, length)\n          var t2 = f(t[0])(attributes, length - t[1])\n          return [t2[0], t[1] + t2[1]]\n        }\n      }\n\n      function unfold(f) {\n        return function (attributes, length) {\n          var result = []\n          var old_length = length\n          while (length > 0) {\n            var t = f.call(that, attributes, length)\n            result.push(t[0])\n            length -= t[1]\n          }\n          return [result, old_length]\n        }\n      }\n\n      function decodeRString(s) {\n        // R encodes NA as a string containing just 0xff\n        if (s.length === 1 && s.charCodeAt(0) === 255) return null\n        // UTF-8 to UTF-16\n        // http://monsur.hossa.in/2012/07/20/utf-8-in-javascript.html\n        // also, we don't want to lose the value when reporting an error in decoding\n        try {\n          return decodeURIComponent(escape(s))\n        } catch (xep) {\n          throw new Error('Invalid UTF8: ' + s)\n        }\n      }\n\n      var that = {\n        offset: 0,\n        data_view: m.make(Rserve.EndianAwareDataView),\n        msg: m,\n\n        //////////////////////////////////////////////////////////////////////\n\n        read_int: function () {\n          var old_offset = this.offset\n          this.offset += 4\n          return this.data_view.getInt32(old_offset)\n        },\n        read_string: function (length) {\n          // FIXME SLOW\n          var result = ''\n          while (length--) {\n            var c = this.data_view.getInt8(this.offset++)\n            if (c) result = result + String.fromCharCode(c)\n          }\n          return decodeRString(result)\n        },\n        read_stream: function (length) {\n          var old_offset = this.offset\n          this.offset += length\n          return this.msg.view(old_offset, length)\n        },\n        read_int_vector: function (length) {\n          var old_offset = this.offset\n          this.offset += length\n          return this.msg.make(Int32Array, old_offset, length)\n        },\n        read_double_vector: function (length) {\n          var old_offset = this.offset\n          this.offset += length\n          return this.msg.make(Float64Array, old_offset, length)\n        },\n\n        //////////////////////////////////////////////////////////////////////\n        // these are members of the reader monad\n\n        read_null: lift(function (a, l) {\n          return Rserve.Robj.null(a)\n        }),\n\n        read_unknown: lift(function (a, l) {\n          this.offset += l\n          return Rserve.Robj.null(a)\n        }),\n\n        read_string_array: function (attributes, length) {\n          var a = this.read_stream(length).make(Uint8Array)\n          var result = []\n          var current_str = ''\n          for (var i = 0; i < a.length; ++i)\n            if (a[i] === 0) {\n              current_str = decodeRString(current_str)\n              result.push(current_str)\n              current_str = ''\n            } else {\n              current_str = current_str + String.fromCharCode(a[i])\n            }\n          return [Rserve.Robj.string_array(result, attributes), length]\n        },\n        read_bool_array: function (attributes, length) {\n          var l2 = this.read_int()\n          var s = this.read_stream(length - 4)\n          var a = _.map(s.make(Uint8Array).subarray(0, l2), function (v) {\n            return v ? true : false\n          })\n          return [Rserve.Robj.bool_array(a, attributes), length]\n        },\n        read_raw: function (attributes, length) {\n          var l2 = this.read_int()\n          var s = this.read_stream(length - 4)\n          var a = new Uint8Array(s.make(Uint8Array).subarray(0, l2)).buffer\n          return [Rserve.Robj.raw(a, attributes), length]\n        },\n\n        read_sexp: function () {\n          var d = this.read_int()\n          var _ = Rserve.Rsrv.par_parse(d)\n          var t = _[0],\n            l = _[1]\n          var total_read = 4\n          var attributes = undefined\n          if (Rserve.Rsrv.IS_LARGE(t)) {\n            var extra_length = this.read_int()\n            total_read += 4\n            l += extra_length * Math.pow(2, 24)\n            t &= ~64\n          }\n          if (t & Rserve.Rsrv.XT_HAS_ATTR) {\n            t = t & ~Rserve.Rsrv.XT_HAS_ATTR\n            var attr_result = this.read_sexp()\n            attributes = attr_result[0]\n            total_read += attr_result[1]\n            l -= attr_result[1]\n          }\n          if (handlers[t] === undefined) {\n            throw new Rserve.RserveError('Unimplemented ' + t, -1)\n          } else {\n            var result = handlers[t].call(this, attributes, l)\n            return [result[0], total_read + result[1]]\n          }\n        }\n      }\n\n      that.read_clos = bind(that.read_sexp, function (formals) {\n        return bind(that.read_sexp, function (body) {\n          return lift(function (a, l) {\n            return Rserve.Robj.clos(formals, body, a)\n          }, 0)\n        })\n      })\n\n      that.read_list = unfold(that.read_sexp)\n\n      function read_symbol_value_pairs(lst) {\n        var result = []\n        for (var i = 0; i < lst.length; i += 2) {\n          var value = lst[i],\n            tag = lst[i + 1]\n          if (tag.type === 'symbol') {\n            result.push({ name: tag.value, value: value })\n          } else {\n            result.push({ name: null, value: value })\n          }\n        }\n        return result\n      }\n      that.read_list_tag = bind(that.read_list, function (lst) {\n        return lift(function (attributes, length) {\n          var result = read_symbol_value_pairs(lst)\n          return Rserve.Robj.tagged_list(result, attributes)\n        }, 0)\n      })\n      that.read_lang_tag = bind(that.read_list, function (lst) {\n        return lift(function (attributes, length) {\n          var result = read_symbol_value_pairs(lst)\n          return Rserve.Robj.tagged_lang(result, attributes)\n        }, 0)\n      })\n\n      function xf(f, g) {\n        return bind(f, function (t) {\n          return lift(function (a, l) {\n            return g(t, a)\n          }, 0)\n        })\n      }\n      that.read_vector = xf(that.read_list, Rserve.Robj.vector)\n      that.read_list_no_tag = xf(that.read_list, Rserve.Robj.list)\n      that.read_lang_no_tag = xf(that.read_list, Rserve.Robj.lang)\n      that.read_vector_exp = xf(that.read_list, Rserve.Robj.vector_exp)\n\n      function sl(f, g) {\n        return lift(function (a, l) {\n          return g(f.call(that, l), a)\n        })\n      }\n      that.read_symname = sl(that.read_string, Rserve.Robj.symbol)\n      that.read_int_array = sl(that.read_int_vector, Rserve.Robj.int_array)\n      that.read_double_array = sl(\n        that.read_double_vector,\n        Rserve.Robj.double_array\n      )\n\n      handlers[Rserve.Rsrv.XT_NULL] = that.read_null\n      handlers[Rserve.Rsrv.XT_UNKNOWN] = that.read_unknown\n      handlers[Rserve.Rsrv.XT_VECTOR] = that.read_vector\n      handlers[Rserve.Rsrv.XT_CLOS] = that.read_clos\n      handlers[Rserve.Rsrv.XT_SYMNAME] = that.read_symname\n      handlers[Rserve.Rsrv.XT_LIST_NOTAG] = that.read_list_no_tag\n      handlers[Rserve.Rsrv.XT_LIST_TAG] = that.read_list_tag\n      handlers[Rserve.Rsrv.XT_LANG_NOTAG] = that.read_lang_no_tag\n      handlers[Rserve.Rsrv.XT_LANG_TAG] = that.read_lang_tag\n      handlers[Rserve.Rsrv.XT_VECTOR_EXP] = that.read_vector_exp\n      handlers[Rserve.Rsrv.XT_ARRAY_INT] = that.read_int_array\n      handlers[Rserve.Rsrv.XT_ARRAY_DOUBLE] = that.read_double_array\n      handlers[Rserve.Rsrv.XT_ARRAY_STR] = that.read_string_array\n      handlers[Rserve.Rsrv.XT_ARRAY_BOOL] = that.read_bool_array\n      handlers[Rserve.Rsrv.XT_RAW] = that.read_raw\n\n      handlers[Rserve.Rsrv.XT_STR] = sl(that.read_string, Rserve.Robj.string)\n\n      return that\n    }\n\n    var incomplete_ = [],\n      incomplete_header_ = null,\n      msg_bytes_ = 0,\n      remaining_ = 0\n    function clear_incomplete() {\n      incomplete_ = []\n      incomplete_header_ = null\n      remaining_ = 0\n      msg_bytes_ = 0\n    }\n\n    function parse(msg) {\n      var result = {}\n      if (incomplete_.length) {\n        result.header = incomplete_header_\n        incomplete_.push(msg)\n        remaining_ -= msg.byteLength\n        if (remaining_ < 0) {\n          result.ok = false\n          result.message =\n            'Messages add up to more than expected length: got ' +\n            (msg_bytes_ - remaining_) +\n            ', expected ' +\n            msg_bytes_\n          clear_incomplete()\n          return result\n        } else if (remaining_ === 0) {\n          var complete_msg = new ArrayBuffer(msg_bytes_),\n            array = new Uint8Array(complete_msg),\n            offset = 0\n          incomplete_.forEach(function (frame, i) {\n            array.set(new Uint8Array(frame), offset)\n            offset += frame.byteLength\n          })\n          if (offset !== msg_bytes_) {\n            result.ok = false\n            result.message =\n              'Internal error - frames added up to ' +\n              offset +\n              ' not ' +\n              msg_bytes_\n            clear_incomplete()\n            return result\n          }\n          clear_incomplete()\n          msg = complete_msg\n        } else {\n          result.ok = true\n          result.incomplete = true\n          return result\n        }\n      }\n\n      var header = new Int32Array(msg, 0, 4)\n      var resp = header[0] & 16777215,\n        status_code = header[0] >>> 24\n      var length = header[1],\n        length_high = header[3]\n      var msg_id = header[2]\n      result.header = [resp, status_code, msg_id]\n\n      if (length_high) {\n        result.ok = false\n        result.message = 'rserve.js cannot handle messages larger than 4GB'\n        return result\n      }\n\n      var full_msg_length = length + 16 // header length + data length\n      if (full_msg_length > msg.byteLength) {\n        incomplete_.push(msg)\n        incomplete_header_ = header\n        msg_bytes_ = full_msg_length\n        remaining_ = msg_bytes_ - msg.byteLength\n        result.header = header\n        result.ok = true\n        result.incomplete = true\n        return result\n      }\n\n      if (resp === Rserve.Rsrv.RESP_ERR) {\n        result.ok = false\n        result.status_code = status_code\n        result.message =\n          'ERROR FROM R SERVER: ' +\n          (Rserve.Rsrv.status_codes[status_code] || status_code) +\n          ' ' +\n          result.header[0] +\n          ' ' +\n          result.header[1] +\n          ' ' +\n          msg.byteLength +\n          ' ' +\n          msg\n        return result\n      }\n\n      if (\n        !(\n          resp === Rserve.Rsrv.RESP_OK ||\n          Rserve.Rsrv.IS_OOB_SEND(resp) ||\n          Rserve.Rsrv.IS_OOB_MSG(resp)\n        )\n      ) {\n        result.ok = false\n        result.message =\n          'Unexpected response from Rserve: ' +\n          resp +\n          ' status: ' +\n          Rserve.Rsrv.status_codes[status_code]\n        return result\n      }\n      try {\n        result.payload = parse_payload(msg)\n        result.ok = true\n      } catch (e) {\n        result.ok = false\n        result.message = e.message\n      }\n      return result\n    }\n\n    function parse_payload(msg) {\n      var payload = Rserve.my_ArrayBufferView(msg, 16, msg.byteLength - 16)\n      if (payload.length === 0) return null\n\n      var reader = read(payload)\n\n      var d = reader.read_int()\n      var _ = Rserve.Rsrv.par_parse(d)\n      var t = _[0],\n        l = _[1]\n      if (Rserve.Rsrv.IS_LARGE(t)) {\n        var more_length = reader.read_int()\n        l += more_length * Math.pow(2, 24)\n        if (l > Math.pow(2, 32)) {\n          // resist the 1 << 32 temptation here!\n          // total_length is greater than 2^32.. bail out because of node limits\n          // even though in theory we could go higher than that.\n          throw new Error('Payload too large: ' + l + ' bytes')\n        }\n        t &= ~64\n      }\n      if (t === Rserve.Rsrv.DT_INT) {\n        return { type: 'int', value: reader.read_int() }\n      } else if (t === Rserve.Rsrv.DT_STRING) {\n        return { type: 'string', value: reader.read_string(l) }\n      } else if (t === Rserve.Rsrv.DT_BYTESTREAM) {\n        // NB this returns a my_ArrayBufferView()\n        return { type: 'stream', value: reader.read_stream(l) }\n      } else if (t === Rserve.Rsrv.DT_SEXP) {\n        _ = reader.read_sexp()\n        var sexp = _[0],\n          l2 = _[1]\n        return { type: 'sexp', value: sexp }\n      } else\n        throw new Rserve.RserveError('Bad type for parse? ' + t + ' ' + l, -1)\n    }\n\n    Rserve.parse_websocket_frame = parse\n    Rserve.parse_payload = parse_payload\n  })()\n  // we want an endian aware dataview mostly because ARM can be big-endian, and\n  // that might put us in trouble wrt handheld devices.\n  //////////////////////////////////////////////////////////////////////////////\n  ;(function () {\n    var _is_little_endian\n    ;(function () {\n      var x = new ArrayBuffer(4)\n      var bytes = new Uint8Array(x),\n        words = new Uint32Array(x)\n      bytes[0] = 1\n      if (words[0] === 1) {\n        _is_little_endian = true\n      } else if (words[0] === 16777216) {\n        _is_little_endian = false\n      } else {\n        throw \"we're bizarro endian, refusing to continue\"\n      }\n    })()\n\n    Rserve.EndianAwareDataView = (function () {\n      var proto = {\n        setInt8: function (i, v) {\n          return this.view.setInt8(i, v)\n        },\n        setUint8: function (i, v) {\n          return this.view.setUint8(i, v)\n        },\n        getInt8: function (i) {\n          return this.view.getInt8(i)\n        },\n        getUint8: function (i) {\n          return this.view.getUint8(i)\n        }\n      }\n\n      var setters = [\n        'setInt32',\n        'setInt16',\n        'setUint32',\n        'setUint16',\n        'setFloat32',\n        'setFloat64'\n      ]\n      var getters = [\n        'getInt32',\n        'getInt16',\n        'getUint32',\n        'getUint16',\n        'getFloat32',\n        'getFloat64'\n      ]\n\n      for (var i = 0; i < setters.length; ++i) {\n        var name = setters[i]\n        proto[name] = (function (name) {\n          return function (byteOffset, value) {\n            return this.view[name](byteOffset, value, _is_little_endian)\n          }\n        })(name)\n      }\n      for (i = 0; i < getters.length; ++i) {\n        var name = getters[i]\n        proto[name] = (function (name) {\n          return function (byteOffset) {\n            return this.view[name](byteOffset, _is_little_endian)\n          }\n        })(name)\n      }\n\n      function my_dataView(buffer, byteOffset, byteLength) {\n        if (byteOffset === undefined) {\n          // work around node.js bug https://github.com/joyent/node/issues/6051\n          if (buffer.byteLength === 0) {\n            this.view = {\n              byteLength: 0,\n              byteOffset: 0\n            }\n          } else this.view = new DataView(buffer)\n        } else {\n          this.view = new DataView(buffer, byteOffset, byteLength)\n        }\n      }\n      my_dataView.prototype = proto\n      return my_dataView\n    })()\n\n    Rserve.my_ArrayBufferView = function (b, o, l) {\n      o = _.isUndefined(o) ? 0 : o\n      l = _.isUndefined(l) ? b.byteLength : l\n      return {\n        buffer: b,\n        offset: o,\n        length: l,\n        data_view: function () {\n          return new Rserve.EndianAwareDataView(\n            this.buffer,\n            this.offset,\n            this.buffer.byteLength - this.offset\n          )\n        },\n        make: function (ctor, new_offset, new_length) {\n          new_offset = _.isUndefined(new_offset) ? 0 : new_offset\n          new_length = _.isUndefined(new_length) ? this.length : new_length\n          var element_size = ctor.BYTES_PER_ELEMENT || 1\n          var n_els = new_length / element_size\n          if ((this.offset + new_offset) % element_size != 0) {\n            var view = new DataView(\n              this.buffer,\n              this.offset + new_offset,\n              new_length\n            )\n            var output_buffer = new ArrayBuffer(new_length)\n            var out_view = new DataView(output_buffer)\n            for (var i = 0; i < new_length; ++i) {\n              out_view.setUint8(i, view.getUint8(i))\n            }\n            return new ctor(output_buffer)\n          } else {\n            return new ctor(this.buffer, this.offset + new_offset, n_els)\n          }\n        },\n        skip: function (offset) {\n          return Rserve.my_ArrayBufferView(\n            this.buffer,\n            this.offset + offset,\n            this.buffer.byteLength\n          )\n        },\n        view: function (new_offset, new_length) {\n          var ofs = this.offset + new_offset\n          if (ofs + new_length > this.buffer.byteLength)\n            throw new Error(\n              'Rserve.my_ArrayBufferView.view: bounds error: size: ' +\n                this.buffer.byteLength +\n                ' offset: ' +\n                ofs +\n                ' length: ' +\n                new_length\n            )\n          return Rserve.my_ArrayBufferView(this.buffer, ofs, new_length)\n        }\n      }\n    }\n  })(this)\n  ;(function () {\n    function _encode_command(command, buffer, msg_id) {\n      if (!_.isArray(buffer)) buffer = [buffer]\n      if (!msg_id) msg_id = 0\n      var length = _.reduce(\n          buffer,\n          function (memo, val) {\n            return memo + val.byteLength\n          },\n          0\n        ),\n        big_buffer = new ArrayBuffer(16 + length),\n        view = new Rserve.EndianAwareDataView(big_buffer)\n      view.setInt32(0, command)\n      view.setInt32(4, length)\n      view.setInt32(8, msg_id)\n      view.setInt32(12, 0)\n      var offset = 16\n      _.each(buffer, function (b) {\n        var source_array = new Uint8Array(b)\n        for (var i = 0; i < source_array.byteLength; ++i)\n          view.setUint8(offset + i, source_array[i])\n        offset += b.byteLength\n      })\n      return big_buffer\n    }\n\n    function _encode_string(str) {\n      var strl = (str.length + 1 + 3) & ~3 // pad to 4-byte boundaries.\n      var payload_length = strl + 4\n      var result = new ArrayBuffer(payload_length)\n      var view = new Rserve.EndianAwareDataView(result)\n      view.setInt32(0, Rserve.Rsrv.DT_STRING + (strl << 8))\n      for (var i = 0; i < str.length; ++i)\n        view.setInt8(4 + i, str.charCodeAt(i))\n      return result\n    }\n\n    function _encode_bytes(bytes) {\n      var payload_length = bytes.length\n      var header_length = 4\n      var result = new ArrayBuffer(payload_length + header_length)\n      var view = new Rserve.EndianAwareDataView(result)\n      view.setInt32(0, Rserve.Rsrv.DT_BYTESTREAM + (payload_length << 8))\n      for (var i = 0; i < bytes.length; ++i) view.setInt8(4 + i, bytes[i])\n      return result\n    }\n\n    Rserve.create = function (opts) {\n      opts = _.defaults(opts || {}, {\n        host: 'http://127.0.0.1:8081',\n        on_connect: function () {}\n      })\n      var host = opts.host\n      var onconnect = opts.on_connect\n      var socket = new WebSocket(host)\n      socket.binaryType = 'arraybuffer'\n      var handle_error =\n        opts.on_error ||\n        function (error) {\n          throw new Rserve.RserveError(error, -1)\n        }\n      var received_handshake = false\n\n      var result\n      var command_counter = 0\n\n      var captured_functions = {}\n\n      var fresh_hash = function () {\n        var k\n        do {\n          // while js has no crypto rngs :(\n          k = String(Math.random()).slice(2, 12)\n        } while (k in captured_functions)\n        if (k.length !== 10) throw new Error('Bad rng, no cookie')\n        return k\n      }\n\n      function convert_to_hash(value) {\n        var hash = fresh_hash()\n        captured_functions[hash] = value\n        return hash\n      }\n\n      function _encode_value(value, forced_type) {\n        var sz = Rserve.determine_size(value, forced_type)\n        // all this will still break if sz is, say, >= 2^31.\n        if (sz > 16777215) {\n          var buffer = new ArrayBuffer(sz + 8)\n          var view = Rserve.my_ArrayBufferView(buffer)\n          // can't left shift value here because value will have bit 32 set and become signed..\n          view\n            .data_view()\n            .setInt32(\n              0,\n              Rserve.Rsrv.DT_SEXP +\n                (sz & 16777215) * Math.pow(2, 8) +\n                Rserve.Rsrv.DT_LARGE\n            )\n          // but *can* right shift because we assume sz is less than 2^31 or so to begin with\n          view.data_view().setInt32(4, sz >>> 24)\n          Rserve.write_into_view(\n            value,\n            view.skip(8),\n            forced_type,\n            convert_to_hash\n          )\n          return buffer\n        } else {\n          var buffer = new ArrayBuffer(sz + 4)\n          var view = Rserve.my_ArrayBufferView(buffer)\n          view.data_view().setInt32(0, Rserve.Rsrv.DT_SEXP + (sz << 8))\n          Rserve.write_into_view(\n            value,\n            view.skip(4),\n            forced_type,\n            convert_to_hash\n          )\n          return buffer\n        }\n      }\n\n      function hand_shake(msg) {\n        msg = msg.data\n        if (typeof msg === 'string') {\n          if (msg.substr(0, 4) !== 'Rsrv') {\n            handle_error('server is not an RServe instance', -1)\n          } else if (msg.substr(4, 4) !== '0103') {\n            handle_error(\n              'sorry, rserve only speaks the 0103 version of the R server protocol',\n              -1\n            )\n          } else if (msg.substr(8, 4) !== 'QAP1') {\n            handle_error('sorry, rserve only speaks QAP1', -1)\n          } else {\n            received_handshake = true\n            if (opts.login) result.login(opts.login)\n            result.running = true\n            onconnect && onconnect.call(result)\n          }\n        } else {\n          var view = new DataView(msg)\n          var header =\n            String.fromCharCode(view.getUint8(0)) +\n            String.fromCharCode(view.getUint8(1)) +\n            String.fromCharCode(view.getUint8(2)) +\n            String.fromCharCode(view.getUint8(3))\n\n          if (header === 'RsOC') {\n            received_handshake = true\n            result.ocap_mode = true\n            result.bare_ocap = Rserve.parse_payload(msg).value\n            result.ocap = Rserve.wrap_ocap(result, result.bare_ocap)\n            result.running = true\n            onconnect && onconnect.call(result)\n          } else handle_error('Unrecognized server answer: ' + header, -1)\n        }\n      }\n\n      socket.onclose = function (msg) {\n        result.running = false\n        result.closed = true\n        opts.on_close && opts.on_close(msg)\n      }\n\n      socket.onmessage = function (msg) {\n        // node.js Buffer vs ArrayBuffer workaround\n        if (msg.data.constructor.name === 'Buffer')\n          msg.data = new Uint8Array(msg.data).buffer\n        if (opts.debug) opts.debug.message_in && opts.debug.message_in(msg)\n        if (!received_handshake) {\n          hand_shake(msg)\n          return\n        }\n        if (typeof msg.data === 'string') {\n          opts.on_raw_string && opts.on_raw_string(msg.data)\n          return\n        }\n        var v = Rserve.parse_websocket_frame(msg.data)\n        if (v.incomplete) return\n        var msg_id = v.header[2],\n          cmd = v.header[0] & 0xffffff\n        var queue = _.find(queues, function (queue) {\n          return queue.msg_id == msg_id\n        })\n        // console.log(\"onmessage, queue=\" + (queue ? queue.name : \"<unknown>\") + \", ok= \" + v.ok+ \", cmd=\" + cmd +\", msg_id=\"+ msg_id);\n        // FIXME: in theory we should not need a fallback, but in case we miss some\n        // odd edge case, we revert to the old behavior.\n        // The way things work, the queue will be undefined only for OOB messages:\n        // SEND doesn't need reply, so it's irrelevant, MSG is handled separately below and\n        // enforces the right queue.\n        if (!queue) queue = queues[0]\n        if (!v.ok) {\n          queue.result_callback([v.message, v.status_code], undefined)\n          // handle_error(v.message, v.status_code);\n        } else if (cmd === Rserve.Rsrv.RESP_OK) {\n          queue.result_callback(null, v.payload)\n        } else if (Rserve.Rsrv.IS_OOB_SEND(cmd)) {\n          opts.on_data && opts.on_data(v.payload)\n        } else if (Rserve.Rsrv.IS_OOB_MSG(cmd)) {\n          // OOB MSG may use random msg_id, so we have to use the USR_CODE to detect the right queue\n          // FIXME: we may want to consider adjusting the protocol specs to require msg_id\n          //        to be retained by OOB based on the outer OCcall message (thus inheriting\n          //        the msg_id), but curretnly it's not mandated.\n          queue =\n            Rserve.Rsrv.OOB_USR_CODE(cmd) > 255 ? compute_queue : ctrl_queue\n          // console.log(\"OOB MSG result on queue \"+ queue.name);\n          var p\n          try {\n            p = Rserve.wrap_all_ocaps(result, v.payload) // .value.json(result.resolve_hash);\n          } catch (e) {\n            _send_cmd_now(\n              Rserve.Rsrv.RESP_ERR | cmd,\n              _encode_string(String(e)),\n              msg_id\n            )\n            return\n          }\n          if (_.isString(p[0])) {\n            if (_.isUndefined(opts.on_oob_message)) {\n              _send_cmd_now(\n                Rserve.Rsrv.RESP_ERR | cmd,\n                _encode_string('No handler installed'),\n                msg_id\n              )\n            } else {\n              queue.in_oob_message = true\n              // breaking changes here: it appears that the callback had its arguments\n              // reversed from the standard (error, message), and was passing the message\n              // even on error\n              opts.on_oob_message(v.payload, function (error, result) {\n                if (!queue.in_oob_message) {\n                  handle_error(\"Don't call oob_message_handler more than once.\")\n                  return\n                }\n                queue.in_oob_message = false\n                if (error) {\n                  _send_cmd_now(\n                    cmd | Rserve.Rsrv.RESP_ERR,\n                    _encode_string(error),\n                    msg_id\n                  )\n                } else {\n                  _send_cmd_now(\n                    cmd | Rserve.Rsrv.RESP_OK,\n                    _encode_string(result),\n                    msg_id\n                  )\n                }\n                bump_queues()\n              })\n            }\n          } else if (_.isFunction(p[0])) {\n            if (!result.ocap_mode) {\n              _send_cmd_now(\n                Rserve.Rsrv.RESP_ERROR | cmd,\n                _encode_string(\n                  'JavaScript function calls only allowed in ocap mode'\n                ),\n                msg_id\n              )\n            } else {\n              var captured_function = p[0],\n                params = p.slice(1)\n              params.push(function (err, result) {\n                if (err) {\n                  _send_cmd_now(\n                    Rserve.Rsrv.RESP_ERR | cmd,\n                    _encode_value(err),\n                    msg_id\n                  )\n                } else {\n                  _send_cmd_now(cmd, _encode_value(result), msg_id)\n                }\n              })\n              captured_function.apply(undefined, params)\n            }\n          } else {\n            _send_cmd_now(\n              Rserve.Rsrv.RESP_ERROR | cmd,\n              _encode_string('Unknown oob message type: ' + typeof p[0])\n            )\n          }\n        } else {\n          handle_error(\n            'Internal Error, parse returned unexpected type ' + v.header[0],\n            -1\n          )\n        }\n      }\n\n      function _send_cmd_now(command, buffer, msg_id) {\n        var big_buffer = _encode_command(command, buffer, msg_id)\n        if (opts.debug)\n          opts.debug.message_out &&\n            opts.debug.message_out(big_buffer[0], command)\n        socket.send(big_buffer)\n        return big_buffer\n      }\n\n      var ctrl_queue = {\n        queue: [],\n        in_oob_message: false,\n        awaiting_result: false,\n        msg_id: 0,\n        name: 'control'\n      }\n\n      var compute_queue = {\n        queue: [],\n        in_oob_message: false,\n        awaiting_result: false,\n        msg_id: 1,\n        name: 'compute'\n      }\n\n      // the order matters - the first queue is used if the association cannot be determined from the msg_id/cmd\n      var queues = [ctrl_queue, compute_queue]\n\n      function queue_can_send(queue) {\n        return (\n          !queue.in_oob_message && !queue.awaiting_result && queue.queue.length\n        )\n      }\n\n      function bump_queues() {\n        var available = _.filter(queues, queue_can_send)\n        // nothing in the queues (or all busy)? get out\n        if (!available.length) return\n        if (result.closed) {\n          handle_error('Cannot send messages on a closed socket!', -1)\n        } else {\n          var queue = _.sortBy(available, function (queue) {\n            return queue.queue[0].timestamp\n          })[0]\n          var lst = queue.queue.shift()\n          queue.result_callback = lst.callback\n          queue.awaiting_result = true\n          if (opts.debug)\n            opts.debug.message_out &&\n              opts.debug.message_out(lst.buffer, lst.command)\n          socket.send(lst.buffer)\n        }\n      }\n\n      function enqueue(buffer, k, command, queue) {\n        queue.queue.push({\n          buffer: buffer,\n          callback: function (error, result) {\n            queue.awaiting_result = false\n            bump_queues()\n            k(error, result)\n          },\n          command: command,\n          timestamp: Date.now()\n        })\n        bump_queues()\n      }\n\n      function _cmd(command, buffer, k, string, queue) {\n        // default to the first queue - only used in non-OCAP mode which doesn't support multiple queues\n        if (!queue) queue = queues[0]\n\n        k = k || function () {}\n        var big_buffer = _encode_command(command, buffer, queue.msg_id)\n        return enqueue(big_buffer, k, string, queue)\n      }\n\n      result = {\n        ocap_mode: false,\n        running: false,\n        closed: false,\n        close: function () {\n          socket.close()\n        },\n\n        //////////////////////////////////////////////////////////////////////\n        // non-ocap mode\n\n        login: function (command, k) {\n          _cmd(Rserve.Rsrv.CMD_login, _encode_string(command), k, command)\n        },\n        eval: function (command, k) {\n          _cmd(Rserve.Rsrv.CMD_eval, _encode_string(command), k, command)\n        },\n        createFile: function (command, k) {\n          _cmd(Rserve.Rsrv.CMD_createFile, _encode_string(command), k, command)\n        },\n        writeFile: function (chunk, k) {\n          _cmd(Rserve.Rsrv.CMD_writeFile, _encode_bytes(chunk), k, '')\n        },\n        closeFile: function (k) {\n          _cmd(Rserve.Rsrv.CMD_closeFile, new ArrayBuffer(0), k, '')\n        },\n        set: function (key, value, k) {\n          _cmd(\n            Rserve.Rsrv.CMD_setSEXP,\n            [_encode_string(key), _encode_value(value)],\n            k,\n            ''\n          )\n        },\n\n        //////////////////////////////////////////////////////////////////////\n        // ocap mode\n\n        OCcall: function (ocap, values, k) {\n          var is_ocap = false,\n            str\n          try {\n            is_ocap |= ocap.r_attributes['class'] === 'OCref'\n            str = ocap[0]\n          } catch (e) {}\n          if (!is_ocap) {\n            try {\n              is_ocap |= ocap.attributes.value[0].value.value[0] === 'OCref'\n              str = ocap.value[0]\n            } catch (e) {}\n          }\n          if (!is_ocap) {\n            k(new Error('Expected an ocap, instead got ' + ocap), undefined)\n            return\n          }\n          var params = [str]\n          params.push.apply(params, values)\n          // determine the proper queue from the OCAP prefix\n          var queue = str.charCodeAt(0) == 64 ? compute_queue : ctrl_queue\n          _cmd(\n            Rserve.Rsrv.CMD_OCcall,\n            _encode_value(params, Rserve.Rsrv.XT_LANG_NOTAG),\n            k,\n            '',\n            queue\n          )\n        },\n\n        wrap_ocap: function (ocap) {\n          return Rserve.wrap_ocap(this, ocap)\n        },\n\n        resolve_hash: function (hash) {\n          if (!(hash in captured_functions))\n            throw new Error('hash ' + hash + ' not found.')\n          return captured_functions[hash]\n        }\n      }\n      return result\n    }\n\n    Rserve.wrap_all_ocaps = function (s, v) {\n      v = v.value.json(s.resolve_hash)\n      function replace(obj) {\n        var result = obj\n        if (\n          _.isArray(obj) &&\n          obj.r_attributes &&\n          obj.r_attributes['class'] == 'OCref'\n        ) {\n          return Rserve.wrap_ocap(s, obj)\n        } else if (_.isArray(obj)) {\n          result = _.map(obj, replace)\n          result.r_type = obj.r_type\n          result.r_attributes = obj.r_attributes\n        } else if (_.isTypedArray(obj)) {\n          return obj\n        } else if (_.isFunction(obj)) {\n          return obj\n        } else if (\n          obj &&\n          !_.isUndefined(obj.byteLength) &&\n          !_.isUndefined(obj.slice)\n        ) {\n          // ArrayBuffer\n          return obj\n        } else if (_.isObject(obj)) {\n          result = _.object(\n            _.map(obj, function (v, k) {\n              return [k, replace(v)]\n            })\n          )\n        }\n        return result\n      }\n      return replace(v)\n    }\n\n    Rserve.wrap_ocap = function (s, ocap) {\n      var wrapped_ocap = function () {\n        var values = _.toArray(arguments)\n        // common error (tho this won't catch the case where last arg is a function)\n        if (!values.length || !_.isFunction(values[values.length - 1]))\n          throw new Error('forgot to pass continuation to ocap')\n        var k = values.pop()\n        s.OCcall(ocap, values, function (err, v) {\n          if (!_.isUndefined(v)) v = Rserve.wrap_all_ocaps(s, v)\n          k(err, v)\n        })\n      }\n      wrapped_ocap.bare_ocap = ocap\n      return wrapped_ocap\n    }\n  })()\n  Rserve.RserveError = function (message, status_code) {\n    this.name = 'RserveError'\n    this.message = message\n    this.status_code = status_code\n  }\n\n  Rserve.RserveError.prototype = Object.create(Error)\n  Rserve.RserveError.prototype.constructor = Rserve.RserveError\n  ;(function () {\n    _.mixin({\n      isTypedArray: function (v) {\n        if (!_.isObject(v)) return false\n        return (\n          !_.isUndefined(v.byteLength) && !_.isUndefined(v.BYTES_PER_ELEMENT)\n        )\n      }\n    })\n\n    // type_id tries to match some javascript values to Rserve value types\n    Rserve.type_id = function (value) {\n      if (_.isNull(value) || _.isUndefined(value)) return Rserve.Rsrv.XT_NULL\n      var type_dispatch = {\n        boolean: Rserve.Rsrv.XT_ARRAY_BOOL,\n        number: Rserve.Rsrv.XT_ARRAY_DOUBLE,\n        string: Rserve.Rsrv.XT_ARRAY_STR // base strings need to be array_str or R gets confused?\n      }\n      if (!_.isUndefined(type_dispatch[typeof value]))\n        return type_dispatch[typeof value]\n\n      // typed arrays\n      if (_.isTypedArray(value)) return Rserve.Rsrv.XT_ARRAY_DOUBLE\n\n      // arraybuffers\n      if (!_.isUndefined(value.byteLength) && !_.isUndefined(value.slice))\n        return Rserve.Rsrv.XT_RAW\n\n      // lists of strings (important for tags)\n      if (\n        _.isArray(value) &&\n        _.all(value, function (el) {\n          return typeof el === 'string'\n        })\n      )\n        return Rserve.Rsrv.XT_ARRAY_STR\n\n      if (\n        _.isArray(value) &&\n        _.all(value, function (el) {\n          return typeof el === 'boolean'\n        })\n      )\n        return Rserve.Rsrv.XT_ARRAY_BOOL\n\n      // arbitrary lists\n      if (_.isArray(value)) return Rserve.Rsrv.XT_VECTOR\n\n      // functions get passed as an array_str with extra attributes\n      if (_.isFunction(value))\n        return Rserve.Rsrv.XT_ARRAY_STR | Rserve.Rsrv.XT_HAS_ATTR\n\n      // objects\n      if (_.isObject(value))\n        return Rserve.Rsrv.XT_VECTOR | Rserve.Rsrv.XT_HAS_ATTR\n\n      throw new Rserve.RServeError(\n        'Value type unrecognized by Rserve: ' + value\n      )\n    }\n\n    // FIXME this is really slow, as it's walking the object many many times.\n    Rserve.determine_size = function (value, forced_type) {\n      function list_size(lst) {\n        return _.reduce(\n          lst,\n          function (memo, el) {\n            return memo + Rserve.determine_size(el)\n          },\n          0\n        )\n      }\n      function final_size(payload_size) {\n        if (payload_size > 1 << 24) return payload_size + 8 // large header\n        else return payload_size + 4\n      }\n      var header_size = 4,\n        t = forced_type || Rserve.type_id(value)\n\n      switch (t & ~Rserve.Rsrv.XT_LARGE) {\n        case Rserve.Rsrv.XT_NULL:\n          return final_size(0)\n        case Rserve.Rsrv.XT_ARRAY_BOOL:\n          if (_.isBoolean(value)) return final_size(8)\n          else return final_size((value.length + 7) & ~3)\n        case Rserve.Rsrv.XT_ARRAY_STR:\n          if (_.isArray(value))\n            return final_size(\n              _.reduce(\n                value,\n                function (memo, str) {\n                  // FIXME: this is a bit silly, since we'll be re-encoding this twice: once for the size and second time for the content\n                  var utf8 = unescape(encodeURIComponent(str))\n                  return memo + utf8.length + 1\n                },\n                0\n              )\n            )\n          else {\n            var utf8 = unescape(encodeURIComponent(value))\n            return final_size(utf8.length + 1)\n          }\n        case Rserve.Rsrv.XT_ARRAY_DOUBLE:\n          if (_.isNumber(value)) return final_size(8)\n          else return final_size(8 * value.length)\n        case Rserve.Rsrv.XT_RAW:\n          return final_size(4 + value.byteLength)\n        case Rserve.Rsrv.XT_VECTOR:\n        case Rserve.Rsrv.XT_LANG_NOTAG:\n          return final_size(list_size(value))\n        case Rserve.Rsrv.XT_VECTOR | Rserve.Rsrv.XT_HAS_ATTR: // a named list (that is, a js object)\n          var names_size_1 = final_size('names'.length + 3)\n          var names_size_2 = Rserve.determine_size(_.keys(value))\n          var names_size = final_size(names_size_1 + names_size_2)\n          return final_size(names_size + list_size(_.values(value)))\n        /*        return header_size // XT_VECTOR | XT_HAS_ATTR\n            + header_size // XT_LIST_TAG (attribute)\n              + header_size + \"names\".length + 3 // length of 'names' + padding (tag as XT_SYMNAME)\n              + Rserve.determine_size(_.keys(value)) // length of names\n            + list_size(_.values(value)); // length of values\n*/\n        case Rserve.Rsrv.XT_ARRAY_STR | Rserve.Rsrv.XT_HAS_ATTR: // js->r ocap (that is, a js function)\n          return (\n            Rserve.determine_size('0403556553') + // length of ocap nonce; that number is meaningless aside from length\n            header_size + // XT_LIST_TAG (attribute)\n            header_size +\n            'class'.length +\n            3 + // length of 'class' + padding (tag as XT_SYMNAME)\n            Rserve.determine_size(['javascript_function'])\n          ) // length of class name\n\n        default:\n          throw new Rserve.RserveError(\"Internal error, can't handle type \" + t)\n      }\n    }\n\n    Rserve.write_into_view = function (\n      value,\n      array_buffer_view,\n      forced_type,\n      convert\n    ) {\n      var size = Rserve.determine_size(value, forced_type)\n      var is_large = size > 16777215\n      // if (size > 16777215)\n      //     throw new Rserve.RserveError(\"Can't currently handle objects >16MB\");\n      var t = forced_type || Rserve.type_id(value),\n        i,\n        current_offset,\n        lbl\n      if (is_large) t = t | Rserve.Rsrv.XT_LARGE\n      var read_view\n      var write_view = array_buffer_view.data_view()\n      var payload_start\n      if (is_large) {\n        payload_start = 8\n        write_view.setInt32(0, t + ((size - 8) << 8))\n        write_view.setInt32(4, (size - 8) >>> 24)\n      } else {\n        payload_start = 4\n        write_view.setInt32(0, t + ((size - 4) << 8))\n      }\n\n      switch (t & ~Rserve.Rsrv.XT_LARGE) {\n        case Rserve.Rsrv.XT_NULL:\n          break\n        case Rserve.Rsrv.XT_ARRAY_BOOL:\n          if (_.isBoolean(value)) {\n            write_view.setInt32(payload_start, 1)\n            write_view.setInt8(payload_start + 4, value ? 1 : 0)\n          } else {\n            write_view.setInt32(payload_start, value.length)\n            for (i = 0; i < value.length; ++i)\n              write_view.setInt8(payload_start + 4 + i, value[i] ? 1 : 0)\n          }\n          break\n        case Rserve.Rsrv.XT_ARRAY_STR:\n          if (_.isArray(value)) {\n            var offset = payload_start\n            _.each(value, function (el) {\n              var utf8 = unescape(encodeURIComponent(el))\n              for (var i = 0; i < utf8.length; ++i, ++offset)\n                write_view.setUint8(offset, utf8.charCodeAt(i))\n              write_view.setUint8(offset++, 0)\n            })\n          } else {\n            var utf8 = unescape(encodeURIComponent(value))\n            for (i = 0; i < utf8.length; ++i)\n              write_view.setUint8(payload_start + i, utf8.charCodeAt(i))\n            write_view.setUint8(payload_start + utf8.length, 0)\n          }\n          break\n        case Rserve.Rsrv.XT_ARRAY_DOUBLE:\n          if (_.isNumber(value)) write_view.setFloat64(payload_start, value)\n          else {\n            for (i = 0; i < value.length; ++i)\n              write_view.setFloat64(payload_start + 8 * i, value[i])\n          }\n          break\n        case Rserve.Rsrv.XT_RAW:\n          read_view = new Rserve.EndianAwareDataView(value)\n          write_view.setUint32(payload_start, value.byteLength)\n          for (i = 0; i < value.byteLength; ++i) {\n            write_view.setUint8(payload_start + 4 + i, read_view.getUint8(i))\n          }\n          break\n        case Rserve.Rsrv.XT_VECTOR:\n        case Rserve.Rsrv.XT_LANG_NOTAG:\n          current_offset = payload_start\n          _.each(value, function (el) {\n            var sz = Rserve.determine_size(el)\n            Rserve.write_into_view(\n              el,\n              array_buffer_view.skip(current_offset),\n              undefined,\n              convert\n            )\n            current_offset += sz\n          })\n          break\n        case Rserve.Rsrv.XT_VECTOR | Rserve.Rsrv.XT_HAS_ATTR:\n          current_offset = payload_start + 8\n          _.each(_.keys(value), function (el) {\n            for (var i = 0; i < el.length; ++i, ++current_offset)\n              write_view.setUint8(current_offset, el.charCodeAt(i))\n            write_view.setUint8(current_offset++, 0)\n          })\n          write_view.setUint32(\n            payload_start + 4,\n            Rserve.Rsrv.XT_ARRAY_STR +\n              ((current_offset - (payload_start + 8)) << 8)\n          )\n\n          write_view.setUint32(\n            current_offset,\n            Rserve.Rsrv.XT_SYMNAME + (8 << 8)\n          )\n          current_offset += 4\n          lbl = 'names'\n          for (i = 0; i < lbl.length; ++i, ++current_offset)\n            write_view.setUint8(current_offset, lbl.charCodeAt(i))\n          current_offset += 3\n\n          write_view.setUint32(\n            payload_start,\n            Rserve.Rsrv.XT_LIST_TAG +\n              ((current_offset - (payload_start + 4)) << 8)\n          )\n\n          _.each(_.values(value), function (el) {\n            var sz = Rserve.determine_size(el)\n            Rserve.write_into_view(\n              el,\n              array_buffer_view.skip(current_offset),\n              undefined,\n              convert\n            )\n            current_offset += sz\n          })\n          break\n\n        case Rserve.Rsrv.XT_ARRAY_STR | Rserve.Rsrv.XT_HAS_ATTR:\n          var converted_function = convert(value)\n          current_offset = payload_start + 8\n          var class_name = 'javascript_function'\n          for (i = 0; i < class_name.length; ++i, ++current_offset)\n            write_view.setUint8(current_offset, class_name.charCodeAt(i))\n          write_view.setUint8(current_offset++, 0)\n          write_view.setUint32(\n            8,\n            Rserve.Rsrv.XT_ARRAY_STR +\n              ((current_offset - (payload_start + 8)) << 8)\n          )\n          write_view.setUint32(\n            current_offset,\n            Rserve.Rsrv.XT_SYMNAME + (8 << 8)\n          )\n          current_offset += 4\n          lbl = 'class'\n          for (i = 0; i < lbl.length; ++i, ++current_offset)\n            write_view.setUint8(current_offset, lbl.charCodeAt(i))\n          current_offset += 3\n          write_view.setUint32(\n            4,\n            Rserve.Rsrv.XT_LIST_TAG +\n              ((current_offset - (payload_start + 4)) << 8)\n          )\n          for (i = 0; i < converted_function.length; ++i)\n            write_view.setUint8(\n              current_offset + i,\n              converted_function.charCodeAt(i)\n            )\n          write_view.setUint8(current_offset + converted_function.length, 0)\n          break\n        default:\n          throw new Rserve.RserveError(\"Internal error, can't handle type \" + t)\n      }\n    }\n  })()\n  return Rserve\n})()\nmodule.exports = Rserve\n// (function () { delete this.Rserve; })(); // unset global\n","import React, { FC } from 'react'\nconst rs = require('../lib/rserve-js')\n\ninterface RserveInterface {\n  OCCall: any\n  bare_ocap: any\n  close: any\n  closed: boolean\n  createFile: any\n  eval: any\n  login: any\n  ocap: any\n  ocap_mode: boolean\n  resolve_hash: any\n  running: boolean\n  set: any\n  wrap_ocap: any\n  writeFile: any\n}\n\nconst defaultRserve = {\n  OCCall: () => {},\n  bare_ocap: () => {},\n  close: () => {},\n  closed: false,\n  createFile: () => {},\n  eval: () => {},\n  login: () => {},\n  ocap: () => {},\n  ocap_mode: true,\n  resolve_hash: () => {},\n  running: false,\n  set: () => {},\n  wrap_ocap: () => {},\n  writeFile: () => {}\n}\n\nconst RC = React.createContext<RserveInterface>(defaultRserve)\n\nconst RserveProvider = ({ value, children }: any) => {\n  const [r, setR] = React.useState<any | null>(RC)\n\n  if (!r || !r.running) {\n    const args = {\n      ...value,\n      on_connect: () => setR(s)\n    }\n    let s = rs.create({ ...args })\n  }\n\n  return <RC.Provider value={r}>{children}</RC.Provider>\n}\n\nexport function useRserve() {\n  return React.useContext(RC)\n}\n\ntype RserveProps = {\n  host: string\n}\n\nexport const Rserve: FC<RserveProps> = ({ host, children }) => {\n  return <RserveProvider value={{ host: host }}>{children}</RserveProvider>\n}\n","import React, { useState } from 'react'\nimport { useRserve } from 'react-rserve'\n\nconst App = () => {\n  const R = useRserve()\n  const [RV, setRV] = useState('')\n\n  if (R.running) {\n    console.log(R)\n    R.ocap(function (err: any, funs: any) {\n      if (err) console.error(err)\n      funs.rversion((err: any, value: string) => {\n        if (err) console.error(err)\n        setRV(value)\n      })\n    })\n  }\n\n  return (\n    <div>\n      <h1>Rserve-enabled app</h1>\n      {RV === '' ? <p>Not connected</p> : <p>Connected to R version {RV}</p>}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Rserve } from 'react-rserve'\nimport App from './App'\n\nReactDOM.render(\n  <Rserve host={'ws://localhost:8081'}>\n    <App />\n  </Rserve>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}